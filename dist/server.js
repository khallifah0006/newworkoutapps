const express=require("express"),{spawn}=require("child_process"),path=require("path"),bodyParser=require("body-parser"),workouts=require("./workouts"),app=express(),PORT=process.env.PORT||8080;function errorResponse(e,r,o){return e.status(r).json({success:!1,error:o})}app.use(bodyParser.json()),app.use(express.static(path.join(__dirname,"dist"))),app.post("/api/recommend",((e,r)=>{try{const{workoutType:o,difficultyLevel:t}=e.body;if(!o)return errorResponse(r,400,"Workout type is required");if("semua"===o){let e=[];for(const r in workouts)for(const o in workouts[r])e=[...e,...workouts[r][o]];if(t&&"all"!==t){const r={beginner:"Easy",intermediate:"Medium",advanced:"Hard"};e=e.filter((e=>e.kesulitan===r[t]))}return r.json({success:!0,recommendations:e})}if(workouts[o]){let e=[];for(const r in workouts[o])e=[...e,...workouts[o][r]];if(t&&"all"!==t){const r={beginner:"Easy",intermediate:"Medium",advanced:"Hard"};e=e.filter((e=>e.kesulitan===r[t]))}return r.json({success:!0,recommendations:e})}return errorResponse(r,400,"Invalid workout type")}catch(e){return console.error("Error in recommend endpoint:",e),errorResponse(r,500,"Server error while processing recommendation")}})),app.post("/recommend",((e,r)=>{e.url="/api/recommend",app._router.handle(e,r)})),app.post("/api/recommendations",((e,r)=>{const{age:o,height:t,weight:s}=e.body;if(!o||!t||!s)return errorResponse(r,400,"Missing required fields");try{const e=spawn("python",["workout_recommendation.py","--age",o.toString(),"--height",t.toString(),"--weight",s.toString()]);let n="";e.stdout.on("data",(e=>{n+=e.toString()})),e.stderr.on("data",(e=>{console.error(`Python script error: ${e}`)})),e.on("close",(e=>{if(0!==e)return errorResponse(r,500,"Python script execution failed");try{const e=JSON.parse(n);r.json(e)}catch(e){return console.error("Error parsing Python output:",e),errorResponse(r,500,"Failed to parse Python output")}}))}catch(e){return console.error("Error executing Python script:",e),errorResponse(r,500,"Failed to execute Python script")}})),app.get("*",((e,r)=>{r.sendFile(path.join(__dirname,"dist","index.html"))})),app.listen(PORT,(()=>{console.log(`Server running at http://localhost:${PORT}`),console.log("Using in-memory storage for programs (data will be lost on server restart)")}));